type Mira {
  id: ID!
  creator: User
  location: Location
  miraMedia: [ArMedia!]
  collectors: [User!]
  flags: [Flag!]
  viewed: Boolean
  isFriend: Boolean
}

type User {
  id: ID!
  username: String!
  phone: String
  profileImage: String
  profileImageDesaturated: String
  profileDescription: String
  accessToken: String
  verificationSid: String
  miras: [Mira]
  collected: [Mira]
  viewed: [Mira]
  friends: [User]
  sentRequests: [User]
  pendingRequests: [User]
}

type Location {
  id: ID!
  latitude: Float!
  longitude: Float!
  elevation: Float
  heading: Float
}

type ArMedia {
  id: ID!
  contentType: ContentType!
  assetUrl: String!
  shape: Shape!
  position: Position
  modifier: Modifier
}

type Position {
  id: ID!
  transform: [[Float!]!]!
}

type Modifier {
  id: ID!
  type: ModifierType!
  amount: Float!
}

type Flag {
  id: ID!
  author: User
  type: FlagType!
  parent: Mira
}

type FriendRequest {
  id: ID!
  inviter: User!
  recipient: User!
  status: FriendshipStatus!
}

type Query {
  user(userId: ID): User
  getMiras(input: GetMirasQueryInput!): [Mira]
  getMirasByIds(input: [ID!]!): [Mira]
}

input GetMirasQueryInput {
  location: LocationInput!
  zoomLevel: Int
  radius: Float!
}

input LocationInput {
  latitude: Float!
  longitude: Float!
  elevation: Float
  heading: Float
}

type Mutation {
  authorizeUser(input: AuthorizationInput!): AuthorizationResult
  verifyUser(input: VerificationInput!): VerificationResult
  updateUser(input: UpdateUserInput!): User
  sendFriendRequest(recipientId: ID!): FriendRequest!
  updateFriendRequest(input: UpdateFriendshipInput!): FriendRequest!
  addMira(input: AddMiraInput!): Mira
  collectMira(input: CollectMiraInput!): Mira
  flagMira(input: FlagMiraInput!): Mira
}

input AuthorizationInput {
  phone: String!
}

input VerificationInput {
  phone: String!
  code: String!
}

input UpdateUserInput {
  username: String
  profileImage: String
  profileDescription: String
}

input UpdateFriendshipInput {
  recipientId: ID!
  status: FriendshipStatus!
}

input AddMiraInput {
  location: LocationInput!
  arMedia: [ArMediaInput!]!
}

input ArMediaInput {
  contentType: ContentType!
  assetUrl: String!
  shape: Shape!
  position: PositionInput!
  modifier: ModifierInput
}

input PositionInput {
  transform: [[Float!]!]!
}

input ModifierInput {
  type: ModifierType!
  amount: Float!
}

input CollectMiraInput {
  miraId: ID!
}

input FlagMiraInput {
  miraId: ID!
  flagType: FlagType!
}

type AuthorizationResult {
  user: User!
  accountStage: AccountStage!
}

type VerificationResult {
  user: User!
  accessToken: String!
}

enum ContentType {
  VIDEO
  PHOTO
}

enum Shape {
  PLANE
  CUBE
  SPHERE
}

enum ModifierType {
  NONE
  WAVE
  ROTATE
}

enum FlagType {
  INAPPROPRIATE
  SPAM
  OTHER
}

enum AccountStage {
  NEW
  EXISTING
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  REJECTED
}

scalar Date
